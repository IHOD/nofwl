#!/usr/bin/env node
/* eslint-disable @typescript-eslint/no-var-requires */
/* eslint-disable @typescript-eslint/no-use-before-define */

/**
 * @author: lencx
 * @create_at: Jun 17, 2019
 */

/**
 * create post
 * path: $type/$filename
 */
const genFile = require('genfile');
const inquirer = require('inquirer');
const _ = require('lodash');
const fuzzy = require('fuzzy');
const chalk = require('chalk');

// TODO: create mdx

inquirer.registerPrompt(
  'autocomplete',
  require('inquirer-autocomplete-prompt')
);

const randomStr = () =>
  Math.random()
    .toString(36)
    .substring(7);

const now = () => {
  const date = new Date();
  const y = date.getFullYear();
  const m = `00${date.getMonth() + 1}`;
  const d = `00${date.getDate()}`;
  return `${y}-${m.substring(m.length - 2)}-${d.substring(d.length - 2)}`;
};

const postTpl = ({ title, type, category, spoiler, tags }) => `---
title: ${title}
date: ${now()}
type: ${type}
category: ${category}
spoiler: ${spoiler}
tags: ${tags}
# readtime:
---
`;

// console.log(process.argv[2]);

console.info(chalk.green('Article Options:'));
const promptList = [
  {
    type: 'input',
    message: 'filename:',
    name: 'filename',
    default: `${now()}-${randomStr()}`, // 默认值
  },
  {
    type: 'input',
    message: 'title:',
    name: 'title',
  },
  {
    type: 'input',
    message: 'spoiler:',
    name: 'spoiler',
  },
  {
    type: 'autocomplete',
    name: 'type',
    message: 'type:',
    source: searchType,
    suggestOnly: true,
  },
  {
    type: 'autocomplete',
    name: 'category',
    message: 'category:',
    source: searchCategory,
    suggestOnly: true,
  },
  {
    type: 'input',
    name: 'tags',
    message: 'tags:',
  },
];

// TODO: type - dynamic and cache
// or read config
const postType = ['technology', 'thinking', 'notes'];
function searchType(answers, input) {
  input = input || '';
  return new Promise(resolve => {
    setTimeout(() => {
      const fuzzyResult = fuzzy.filter(input, postType);
      resolve(
        fuzzyResult.map(function(el) {
          return el.original;
        })
      );
    }, _.random(30, 500));
  });
}

// TODO: category - dynamic and cache
// or read config
const postCategory = [
  'awesome',
  'js',
  'html',
  'css',
  'ts',
  'git',
  'bash',
  'c',
  'rust',
];

function searchCategory(answers, input) {
  input = input || '';
  return new Promise(resolve => {
    setTimeout(() => {
      const fuzzyResult = fuzzy.filter(input, postCategory);
      resolve(
        fuzzyResult.map(function(el) {
          return el.original;
        })
      );
    }, _.random(30, 500));
  });
}

inquirer.prompt(promptList).then(answers => {
  console.info(answers);
  const { filename, type } = answers;
  const _postHead = postTpl(answers);

  // generate file
  genFile({
    filename: 'index.md',
    template: _postHead,
    path: `./content/${type}/${filename}`,
  });
});
